"""added user-related schemas: user, role, user_has_role, user_event

Revision ID: f09861c6a1a2
Revises: 
Create Date: 2023-06-26 13:26:40.206869

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "f09861c6a1a2"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=80), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("public_id", sa.String(length=36), nullable=False),
        sa.Column("email", sa.String(length=80), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("fisrt_name", sa.String(length=50), nullable=True),
        sa.Column("last_name", sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("public_id"),
    )
    op.create_table(
        "user_event",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "event_type",
            sa.Enum("REGISTER", "LOGIN", "LOG_OUT", "PASSWORD_CHANGE", "EDIT", name="usereventtype"),
            nullable=False,
        ),
        sa.Column("date_time", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("ip", sa.String(length=100), nullable=True),
        sa.Column("email", sa.String(length=80), nullable=True),
        sa.Column("password", sa.String(length=255), nullable=True),
        sa.Column("fisrt_name", sa.String(length=50), nullable=True),
        sa.Column("last_name", sa.String(length=50), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_has_role",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "role_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_has_role")
    op.drop_table("user_event")
    op.drop_table("user")
    op.drop_table("role")
    # ### end Alembic commands ###
